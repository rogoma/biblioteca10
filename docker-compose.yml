version: "3.7"

services:
    app:
        image: "laratest/app:${TAG:-latest}"
        build:
            args:
                user: testusr
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        container_name: biblio10-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - biblio-network

    web:
        image: nginx:1.19.4
        container_name: biblio10-nginx
        restart: unless-stopped
        ports:
            - ${SERVER_PORT:-80}:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - biblio-network

    pgsql:
        image: postgres:12.4
        container_name: biblio10-pgsql12
        restart: unless-stopped
        # expose:
        #     - 5432
        ports:
            - "5432:5432"
        volumes:
            - dbpgsql:/docker-entrypoint-initdb.d/
        environment:
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
            POSTGRES_DB: ${DB_DATABASE:-biblioteca10}
        networks:
            - biblio-network

    adminer:
        image: adminer
        restart: always
        ports:
            - ${ADMINER_PORT_DB:-8080}:8080
        environment:
            - ADMINER_DEFAULT-SERVER=pgsql
            - ADMINER_DESIGN=price
        networks:
            - biblio-network

    mailhog:
        image: mailhog/mailhog
        logging:
            driver: "none"
        ports:
            - ${MAIL_PORT:-1025}:1025
            - ${MAILHOG_PORT:-8025}:8025
        networks:
            - biblio-network

networks:
    biblio-network:
        driver: bridge

volumes:
    dbpgsql:
